// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Single Article Component Test Suite <ReadSingleArticle /> should render the ReadSingleArticle component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReadSingleArticle
    actions={
      Object {
        "getArticleById": [Function],
      }
    }
    match={
      Object {
        "params": Object {
          "slug": "hello",
        },
      }
    }
    singleArticle={
      Object {
        "id": 2,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <React.Fragment>
        <Connect(ReadSingleArticlePresentation)
          active={false}
          articleId=""
          author={false}
          body=""
          handleGlow={[Function]}
          likesCount={0}
          slug="hello"
          title=""
          username="@username"
        />
      </React.Fragment>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Connect(ReadSingleArticlePresentation)
          active={false}
          articleId=""
          author={false}
          body=""
          handleGlow={[Function]}
          likesCount={0}
          slug="hello"
          title=""
          username="@username"
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "active": false,
          "articleId": "",
          "author": false,
          "body": "",
          "handleGlow": [Function],
          "likesCount": 0,
          "slug": "hello",
          "time": undefined,
          "title": "",
          "userImage": undefined,
          "username": "@username",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": Symbol(react.fragment),
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <React.Fragment>
          <Connect(ReadSingleArticlePresentation)
            active={false}
            articleId=""
            author={false}
            body=""
            handleGlow={[Function]}
            likesCount={0}
            slug="hello"
            title=""
            username="@username"
          />
        </React.Fragment>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Connect(ReadSingleArticlePresentation)
            active={false}
            articleId=""
            author={false}
            body=""
            handleGlow={[Function]}
            likesCount={0}
            slug="hello"
            title=""
            username="@username"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": false,
            "articleId": "",
            "author": false,
            "body": "",
            "handleGlow": [Function],
            "likesCount": 0,
            "slug": "hello",
            "time": undefined,
            "title": "",
            "userImage": undefined,
            "username": "@username",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": Symbol(react.fragment),
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Single Article Component Test Suite <ReadSingleArticlePresentation /> should render the ReadSingleArticlePresentation component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(ReadSingleArticlePresentation)
    username="@username"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": Object {
      "$$typeof": Symbol(react.context),
      "_calculateChangedBits": null,
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": null,
        "_currentValue2": null,
        "_threadCount": 0,
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": Object {
        "$$typeof": Symbol(react.context),
        "_calculateChangedBits": null,
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Single Article Component Test Suite <ReadSingleArticlePresentationError /> should render the ReadSingleArticleError component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReadSingleArticleError />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          Sorry This Article
          <br />
          Sorry This Article Does Not Exist
        </h3>,
        <br />,
        <a
          to="/"
        >
          <div>
            ..go back Home....
          </div>
        </a>,
      ],
      "className": "container ReadSingleArticleError",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Sorry This Article",
            <br />,
            "Sorry This Article Does Not Exist",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Sorry This Article",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          "Sorry This Article Does Not Exist",
        ],
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div>
            ..go back Home....
          </div>,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "..go back Home....",
          },
          "ref": null,
          "rendered": "..go back Home....",
          "type": "div",
        },
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            Sorry This Article
            <br />
            Sorry This Article Does Not Exist
          </h3>,
          <br />,
          <a
            to="/"
          >
            <div>
              ..go back Home....
            </div>
          </a>,
        ],
        "className": "container ReadSingleArticleError",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Sorry This Article",
              <br />,
              "Sorry This Article Does Not Exist",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Sorry This Article",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            "Sorry This Article Does Not Exist",
          ],
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div>
              ..go back Home....
            </div>,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "..go back Home....",
            },
            "ref": null,
            "rendered": "..go back Home....",
            "type": "div",
          },
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
